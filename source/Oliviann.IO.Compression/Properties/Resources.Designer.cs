//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Oliviann.IO.Compression.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Oliviann.IO.Compression.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access violation error..
        /// </summary>
        internal static string AccessViolationError {
            get {
                return ResourceManager.GetString("AccessViolationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot locate application file path and/or no custom ApplicationFilePath was provided..
        /// </summary>
        internal static string CompressionError {
            get {
                return ResourceManager.GetString("CompressionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while decompressing file. See inner exception for more information..
        /// </summary>
        internal static string DecompressionError {
            get {
                return ResourceManager.GetString("DecompressionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Error.
        /// </summary>
        internal static string ExitCode0 {
            get {
                return ResourceManager.GetString("ExitCode0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning (Non fatal error(s)). For example, one or more files were locked by some other application, so they were not compressed..
        /// </summary>
        internal static string ExitCode1 {
            get {
                return ResourceManager.GetString("ExitCode1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal Error.
        /// </summary>
        internal static string ExitCode2 {
            get {
                return ResourceManager.GetString("ExitCode2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User stopped the process.
        /// </summary>
        internal static string ExitCode255 {
            get {
                return ResourceManager.GetString("ExitCode255", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command line error.
        /// </summary>
        internal static string ExitCode7 {
            get {
                return ResourceManager.GetString("ExitCode7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough memory for operation.
        /// </summary>
        internal static string ExitCode8 {
            get {
                return ResourceManager.GetString("ExitCode8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to unknown exit code returned.
        /// </summary>
        internal static string ExitCodeDefault {
            get {
                return ResourceManager.GetString("ExitCodeDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file path does not exist in the current archive..
        /// </summary>
        internal static string FileNotFoundInArchiveError {
            get {
                return ResourceManager.GetString("FileNotFoundInArchiveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot execute multiple processes while a process is still running..
        /// </summary>
        internal static string MultipleProcessesError {
            get {
                return ResourceManager.GetString("MultipleProcessesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in encrypted file. Wrong password?.
        /// </summary>
        internal static string TestParser_EncryptedFileError {
            get {
                return ResourceManager.GetString("TestParser_EncryptedFileError", resourceCulture);
            }
        }
    }
}
